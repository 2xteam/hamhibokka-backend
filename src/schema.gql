# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: ID!
  userId: String!
  email: String!
  nickname: String!
  profileImage: String
}

type AuthPayload {
  accessToken: String!
  user: User!
}

type Follow {
  id: ID!
  followerId: String!
  followingId: String!
}

type GoalParticipant {
  userId: String!
  nickname: String
  status: String!
  currentStickerCount: Float!
  joinedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Goal {
  id: ID!
  goalId: String!
  title: String!
  description: String
  stickerCount: Float!
  mode: String
  visibility: String
  status: String
  createdBy: String
  creatorNickname: String
  autoApprove: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  isParticipant: Boolean
  participants: [GoalParticipant!]
}

type GoalInvitation {
  id: ID!
  invitationId: String!
  goalId: String!
  fromUserId: String!
  toUserId: String!
  type: String!
  status: String!
  message: String
  respondedAt: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
  goal: Goal
}

type StickerImage {
  id: ID!
  stickerImageId: String!
  name: String!
  imageUrl: String!
  thumbnailUrl: String!
  isDefault: Boolean!
  category: String
  uploadedBy: String
  createdAt: DateTime!
}

type Sticker {
  id: ID!
  goalId: String!
  recipientId: String!
  stickerImageId: String!
}

type Query {
  hello: String!
  getUser(id: String!): User
  getUsers: [User!]!
  getGoals: [Goal!]!
  getGoal(id: String!): Goal
  getFollows: [Follow!]!
  getFollow(id: String!): Follow
  getStickers: [Sticker!]!
  getSticker(id: String!): Sticker
  myStickerImages: [StickerImage!]!
  defaultStickerImages: [StickerImage!]!
  getMyInvitations: [GoalInvitation!]!
  getReceivedInvitations: [GoalInvitation!]!
  getSentInvitations: [GoalInvitation!]!
  getInvitation(id: String!): GoalInvitation
  getInvitationsByGoalId(goalId: String!): [GoalInvitation!]!
  getReceivedInvites: [GoalInvitation!]!
  getSentInvites: [GoalInvitation!]!
  getSentRequests: [GoalInvitation!]!
  getInvitationsByStatus(status: String!): [GoalInvitation!]!
}

type Mutation {
  register(registerInput: RegisterInput!): AuthPayload!
  login(loginInput: LoginInput!): AuthPayload!
  createUser(input: UserInput!): User!
  updateUser(id: String!, input: UserInput!): User!
  deleteUser(id: String!): Boolean!
  createGoal(input: GoalInput!): Goal!
  updateGoal(id: String!, input: GoalInput!): Goal!
  deleteGoal(id: String!): Boolean!
  createFollow(input: FollowInput!): Follow!
  updateFollow(id: String!, input: FollowInput!): Follow!
  deleteFollow(id: String!): Boolean!
  createSticker(input: StickerInput!): Sticker!
  updateSticker(id: String!, input: StickerInput!): Sticker!
  deleteSticker(id: String!): Boolean!
  deleteStickerImage(stickerImageId: String!): Boolean!
  createGoalInvitation(input: CreateGoalInvitationInput!): GoalInvitation!
  createGoalJoinRequest(input: CreateGoalJoinRequestInput!): GoalInvitation!
  updateGoalInvitation(id: String!, input: UpdateGoalInvitationInput!): GoalInvitation!
  deleteGoalInvitation(id: String!): Boolean!
}

input RegisterInput {
  email: String!
  password: String!
  nickname: String!
}

input LoginInput {
  email: String!
  password: String!
}

input UserInput {
  email: String!
  nickname: String!
  profileImage: String
  userId: String!
  password: String!
}

input GoalInput {
  title: String!
  description: String
  stickerCount: Float!
  mode: String
  visibility: String
  status: String
  autoApprove: Boolean
}

input FollowInput {
  followerId: String!
  followingId: String!
}

input StickerInput {
  goalId: String!
  recipientId: String!
  stickerImageId: String!
}

input CreateGoalInvitationInput {
  goalId: String!
  toUserId: String!
  type: String!
  message: String
}

input CreateGoalJoinRequestInput {
  goalId: String!
  message: String
}

input UpdateGoalInvitationInput {
  status: String!
  message: String
}